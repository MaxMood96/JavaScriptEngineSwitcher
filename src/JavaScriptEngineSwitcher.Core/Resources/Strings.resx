<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Common_ArgumentIsEmpty" xml:space="preserve">
    <value>The parameter '{0}' must be a non-empty string.</value>
  </data>
  <data name="Common_ArgumentIsNull" xml:space="preserve">
    <value>The parameter '{0}' must be a non-nullable.</value>
  </data>
  <data name="Common_CannotConvertObjectToType" xml:space="preserve">
    <value>Cannot convert object of type `{0}` to type `{1}`.</value>
  </data>
  <data name="Common_EnumValueConversionFailed" xml:space="preserve">
    <value>Can not convert value '{0}' of enumeration type `{1}` to value of enumeration type `{2}`.</value>
  </data>
  <data name="Common_FileNotExist" xml:space="preserve">
    <value>File '{0}' not exist.</value>
  </data>
  <data name="Common_ResourceIsNull" xml:space="preserve">
    <value>Resource with name '{0}' is null.</value>
  </data>
  <data name="Common_SeeOriginalErrorMessage" xml:space="preserve">
    <value>See the original error message: “{0}”.</value>
  </data>
  <data name="Common_ValueIsEmpty" xml:space="preserve">
    <value>Value cannot be empty.</value>
  </data>
  <data name="Common_ValueIsNull" xml:space="preserve">
    <value>Value cannot be null.</value>
  </data>
  <data name="Common_ValueTypeCannotBeNull" xml:space="preserve">
    <value>Cannot convert null to a value type.</value>
  </data>
  <data name="Configuration_AssigningToJsEngineSwitcherCurrentPropertyForbidden" xml:space="preserve">
    <value>Assigning an instance of the JS engine switcher to the `Current` property of `JsEngineSwitcher` class is forbidden. To register an instance of the JS engine switcher, use the `IServiceCollection` interface or set the `AllowCurrentProperty` property of `JsEngineSwitcher` class to `true`.</value>
  </data>
  <data name="Configuration_DefaultJsEngineNameNotSpecified" xml:space="preserve">
    <value>Name of default JavaScript engine not specified.</value>
  </data>
  <data name="Configuration_GettingFromJsEngineSwitcherCurrentPropertyForbidden" xml:space="preserve">
    <value>Getting an instance of the JS engine switcher from the `Current` property of `JsEngineSwitcher` class is forbidden. To get an instance of the JS engine switcher, use the `IServiceCollection` interface or set the `AllowCurrentProperty` property of `JsEngineSwitcher` class to `true`.</value>
  </data>
  <data name="Configuration_JsEngineFactoryNotFound" xml:space="preserve">
    <value>Could not find a factory, that creates an instance of the JavaScript engine with name `{0}`.</value>
  </data>
  <data name="Engine_AssemblyNotFound" xml:space="preserve">
    <value>Most likely it happened, because the '{0}' assembly or one of its dependencies was not found.</value>
  </data>
  <data name="Engine_JsEngineNotLoaded" xml:space="preserve">
    <value>Failed to create instance of the {0}.</value>
  </data>
  <data name="Engine_NoNuGetPackageForProcessorArchitecture" xml:space="preserve">
    <value>There is no {0} package for the {1} processor architecture.</value>
  </data>
  <data name="Engine_NuGetPackageInstallationRequired" xml:space="preserve">
    <value>Try to install the {0} package via NuGet.</value>
  </data>
  <data name="Engine_OperatingSystemNotSupported" xml:space="preserve">
    <value>Your operating system is not supported by the engine.</value>
  </data>
  <data name="Engine_ProcessorArchitectureNotSupported" xml:space="preserve">
    <value>{0} processor architecture is not supported by the engine.</value>
  </data>
  <data name="ErrorDetails_CallStack" xml:space="preserve">
    <value>Call stack</value>
  </data>
  <data name="ErrorDetails_Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="ErrorDetails_ColumnNumber" xml:space="preserve">
    <value>Column number</value>
  </data>
  <data name="ErrorDetails_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ErrorDetails_DocumentName" xml:space="preserve">
    <value>Document name</value>
  </data>
  <data name="ErrorDetails_EngineName" xml:space="preserve">
    <value>Engine name</value>
  </data>
  <data name="ErrorDetails_EngineVersion" xml:space="preserve">
    <value>Engine version</value>
  </data>
  <data name="ErrorDetails_LineNumber" xml:space="preserve">
    <value>Line number</value>
  </data>
  <data name="ErrorDetails_Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="ErrorDetails_SourceFragment" xml:space="preserve">
    <value>Source fragment</value>
  </data>
  <data name="ErrorDetails_Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Runtime_FunctionNotExist" xml:space="preserve">
    <value>The function with the name '{0}' does not exist.</value>
  </data>
  <data name="Runtime_InvalidErrorLocationLineFormat" xml:space="preserve">
    <value>The '{0}' line of the script error location has an incorrect format.</value>
  </data>
  <data name="Runtime_ScriptInterrupted" xml:space="preserve">
    <value>Script execution was interrupted.</value>
  </data>
  <data name="Runtime_ScriptTimeoutExceeded" xml:space="preserve">
    <value>Script execution exceeded timeout.</value>
  </data>
  <data name="Runtime_VariableNotExist" xml:space="preserve">
    <value>The variable with the name '{0}' does not exist.</value>
  </data>
  <data name="Usage_CannotConvertPrecompiledScriptToInternalType" xml:space="preserve">
    <value>Cannot convert a pre-compiled script to internal type `{0}`.</value>
  </data>
  <data name="Usage_CannotExecuteEmptyFile" xml:space="preserve">
    <value>Cannot execute a '{0}' file, because it is empty.</value>
  </data>
  <data name="Usage_CannotExecuteEmptyResource" xml:space="preserve">
    <value>Cannot execute a '{0}' resource, because it is empty.</value>
  </data>
  <data name="Usage_CannotExecutePrecompiledScriptForAnotherJsEngine" xml:space="preserve">
    <value>Cannot execute a pre-compiled script, because it was created for another JS engine with name `{0}`.</value>
  </data>
  <data name="Usage_CannotPrecompileEmptyFile" xml:space="preserve">
    <value>Cannot pre-compile a '{0}' file, because it is empty.</value>
  </data>
  <data name="Usage_CannotPrecompileEmptyResource" xml:space="preserve">
    <value>Cannot pre-compile a '{0}' resource, because it is empty.</value>
  </data>
  <data name="Usage_EmbeddedHostObjectTypeNotSupported" xml:space="preserve">
    <value>The embedded host object '{0}' has a type `{1}`, which is not supported.</value>
  </data>
  <data name="Usage_EmbeddedHostTypeNotSupported" xml:space="preserve">
    <value>The embedded host type `{0}` is not supported.</value>
  </data>
  <data name="Usage_FunctionParameterTypeNotSupported" xml:space="preserve">
    <value>One of the function parameters '{0}' has a type `{1}`, which is not supported.</value>
  </data>
  <data name="Usage_InvalidDocumentNameFormat" xml:space="preserve">
    <value>The document name '{0}' has incorrect format.</value>
  </data>
  <data name="Usage_InvalidFileNameFormat" xml:space="preserve">
    <value>The file name '{0}' has incorrect format.</value>
  </data>
  <data name="Usage_InvalidFunctionNameFormat" xml:space="preserve">
    <value>The function name '{0}' has incorrect format.</value>
  </data>
  <data name="Usage_InvalidResourceNameFormat" xml:space="preserve">
    <value>The resource name '{0}' has incorrect format.</value>
  </data>
  <data name="Usage_InvalidScriptItemNameFormat" xml:space="preserve">
    <value>The script item name '{0}' has incorrect format.</value>
  </data>
  <data name="Usage_InvalidVariableNameFormat" xml:space="preserve">
    <value>The variable name '{0}' has incorrect format.</value>
  </data>
  <data name="Usage_ReturnValueTypeNotSupported" xml:space="preserve">
    <value>The type of return value `{0}` is not supported.</value>
  </data>
  <data name="Usage_VariableTypeNotSupported" xml:space="preserve">
    <value>The variable '{0}' has a type `{1}`, which is not supported.</value>
  </data>
</root>